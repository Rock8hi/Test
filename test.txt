	
layout->setBackGroundColorType(LAYOUT_COLOR_SOLID);
layout->setBackGroundColor(Color3B::RED)

-- Layout显示底色
layout:setBackGroundColorType(ccui.LayoutBackGroundColorType.solid)
layout:setBackGroundColor(cc.RED)


local data = {
	seatId = 1,
	huaCards = {2, 1, 0, 3},
	newCards = {0x41},
	newHuaCards = {0x54, 0x55, 0x56},
	isHuang = 0
}

pngquant——一个好用的png压缩工具
pngquant --quality=65-80 image.png




#define PRINT_TABLE_FIELD(__index__) \
{\
	int __type__ = lua_type(L, __index__);\
	switch (__type__)\
	{\
	case LUA_TBOOLEAN:\
		printf("%s", lua_toboolean(L, __index__) ? "true" : "false");\
		break;\
	case LUA_TNUMBER:\
		printf("%.02f", lua_tonumber(L, __index__));\
		break;\
	case LUA_TSTRING:\
		printf("'%s'", lua_tostring(L, __index__));\
		break;\
	default:\
		printf("%s", lua_typename(L, __type__));\
		break;\
	}\
}\

void luaPrintTable(lua_State *L, int tab)
{
	if (!lua_istable(L, tab))
		return;

	lua_pushnil(L); // push the first key
	while (0 != lua_next(L, tab))
	{
		PRINT_TABLE_FIELD(-2); // value
		printf(" : ");
		PRINT_TABLE_FIELD(-1); // key
		printf("\n");
		lua_pop(L, 1); // pop value
	}
	return 0;
}


void luaDumpStack(lua_State *L)
{
	printf("\n");
	int i = 0;
	int top = lua_gettop(L);    // 获取栈中元素个数。
	printf("top: %d\n", top);
	for (i = top; i >= 1; --i)    // 遍历栈中每一个元素。
	{
		int t = lua_type(L, i);    // 获取元素的类型。
		switch (t)
		{
		case LUA_TSTRING:    // strings
			printf("%d: [%s] '%s'\n", i, lua_typename(L, t), lua_tostring(L, i));
			break;

		case LUA_TBOOLEAN:    // bool
			printf("%d: [%s] %s\n", i, lua_typename(L, t), lua_toboolean(L, i) ? "true" : "false");
			break;

		case LUA_TNUMBER:    // number
			printf("%d: [%s] %g\n", i, lua_typename(L, t), lua_tonumber(L, i));    // %g，自动选择%e或%f表示数值。
			break;

		case LUA_TTABLE:
			printf("%d: [%s]\n", i, lua_typename(L, t));
			luaPrintTable(L, i);
			break;

		default:    // other values
			printf("%d: [%s]\n", i, lua_typename(L, t));    // 将宏定义的类型码转换为类型名称。
			break;
		}
	}
	printf("\n");
}













